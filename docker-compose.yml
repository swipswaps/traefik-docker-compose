version: "3.7"

services:
  traefik:
    image: "traefik:v2.1"
    command:
      - "--log.level=${LOG_LEVEL}"
      - "--api.dashboard=true"
      - "--entryPoints.web.address=:80"
      - "--entryPoints.websecure.address=:443"
      - "--providers.docker=true"
      - "--providers.docker.watch=true"
      - "--providers.docker.swarmMode=true"
      - "--providers.docker.useBindPortIP=true"
      - "--providers.docker.network=${DOCKER_STACK}_proxy"
      - "--providers.docker.exposedByDefault=false"
      - "--accesslog=true"
    networks:
      - webgateway
      - proxy
    ports:
      - 80:80
      - 443:443
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
    deploy:
      mode: global
      placement:
        constraints:
          - node.role == manager
      restart_policy:
        condition: on-failure
      update_config:
        order: start-first
        parallelism: 1
        delay: 10s
      labels:
        - "traefik.enable=true"

        # Dashboard
        - "traefik.http.services.traefik.loadbalancer.server.port=8080"
        - "traefik.http.routers.traefik.rule=Host(`${DASHBOARD_SUBDOMAIN}.${DOMAIN}`)"
        - "traefik.http.routers.traefik.entrypoints=web,websecure"
        - "traefik.http.routers.traefik.service=api@internal"
        - "traefik.http.routers.traefik.tls=true"
        - "traefik.http.routers.traefik.middlewares=auth"
        - "traefik.http.middlewares.auth.digestauth.users=${DASHBOARD_CREDENTIALS}"
        - "traefik.http.middlewares.auth.digestauth.realm=${AUTH_REALM}"
        
        # Default HTTP to HTTPS redirect
        - "traefik.http.routers.https_redirect.rule=PathPrefix(`/`)"
        - "traefik.http.routers.https_redirect.entrypoints=web"
        - "traefik.http.routers.https_redirect.priority=1"
        - "traefik.http.routers.https_redirect.middlewares=htst_header"
        - "traefik.http.middlewares.htst_header.headers.framedeny=true"
        - "traefik.http.middlewares.htst_header.headers.sslredirect=true"
        - "traefik.http.middlewares.htst_header.headers.stsIncludeSubdomains=true"
        - "traefik.http.middlewares.htst_header.headers.stsPreload=true"
        - "traefik.http.middlewares.htst_header.headers.forceSTSHeader=true"

        # Redirect WWW to non-WWW
        - "traefik.http.routers.www_redirect.rule=HostRegexp(`{host:(www\\.).+}`)"
        - "traefik.http.routers.www_redirect.entrypoints=websecure"
        - "traefik.http.routers.www_redirect.priority=1"
        - "traefik.http.routers.www_redirect.tls=true"
        - "traefik.http.routers.www_redirect.middlewares=www_to_non_www"
        - "traefik.http.middlewares.www_to_non_www.redirectregex.regex=^https://www\\.(.+)"
        - "traefik.http.middlewares.www_to_non_www.redirectregex.replacement=https://$${1}"
        - "traefik.http.middlewares.www_to_non_www.redirectregex.permanent=true"
networks:
  webgateway:
    driver: overlay
    internal: false
  proxy:
    driver: overlay
    internal: true